#!/usr/bin/python

import argparse
from argparse import ArgumentParser

import os.path
from photon_tools.favia import corr
from photon_tools.read_photons import TimestampFile

import numpy as np
from matplotlib import pyplot as pl
import math

verbose = False

def read_data(file):
    a = TimestampFile(file.name, 0)
    d = TimestampFile(file.name, 1)
    jiffy = a.jiffy
    if jiffy is None:
        jiffy = 1. / 128e6
        print "Couldn't identify jiffy of file. Defaulting to %e s" % jiffy
    return (jiffy, a.data, d.data)

def correlate_timetags(file, min_lag, max_lag, fineness):
    jiffy,donor,acceptor = read_data(file)

    fname = os.path.basename(file.name)
    print 'Read %s: %d acceptor events, %d donor events' % (fname, len(acceptor), len(donor))
    dcorr = corr(donor, donor, jiffy=jiffy, short_grain=min_lag, long_lag=max_lag, fineness=fineness, verbose=verbose)
    acorr = corr(acceptor ,acceptor, jiffy=jiffy, short_grain=min_lag, long_lag=max_lag, fineness=fineness, verbose=verbose)
    xcorr = corr(donor, acceptor, jiffy=jiffy, short_grain=min_lag, long_lag=max_lag, fineness=fineness, verbose=verbose)
    np.savetxt(fname+'.dcorr', dcorr)
    np.savetxt(fname+'.acorr', acorr)
    np.savetxt(fname+'.xcorr', xcorr)
    plot_corr(dcorr, fname+'.dcorr.png')
    plot_corr(acorr, fname+'.acorr.png')
    plot_corr(xcorr, fname+'.xcorr.png')
    
    #Note that files have the following columns:  
    #time, logtime, dot, correlation function, uncertainty, mean, uncertainty in mean.

def plot_corr(corr, output=None):
    pl.clf()
    pl.xscale('log')
    pl.errorbar(corr['lag'], corr['dotnormed'], yerr=corr['bar'], fmt='.')
    pl.xlabel('Lag (s)')
    pl.ylabel('Correlation function')
    if output is not None:
	pl.savefig(output)
    
parser = ArgumentParser(description='Compute and plot correlation functions of photon timestamps')
parser.add_argument('files', metavar='FILE', type=argparse.FileType('r'), nargs='+',
                    help='Input timestamp files')
parser.add_argument('-v', '--verbose', action='store_true',
                    help='Produce debugging output')
parser.add_argument('-E', '--min-lag', type=float, default=1e-7,
                    help='Smallest lag to compute')
parser.add_argument('-L', '--max-lag', type=float, default=1,
                    help='Longest lag to compute')
parser.add_argument('-f', '--fineness', type=int, default=8,
                    help='Granularity of lags')
args = parser.parse_args()
verbose = args.verbose

for file in args.files:
    correlate_timetags(file, args.min_lag, args.max_lag, args.fineness)
    
