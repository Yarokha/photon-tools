#!/usr/bin/python

from __future__ import division
import numpy as np
from photon_tools import fcs_mem
from photon_tools.fcs_models import *
import matplotlib.pyplot as pl

def load_corr(file):
    dt = [('lag','f'), ('G','f'), ('var','f')]
    usecols = None
    lines = [l for l in open(file.name).readlines() if not l.startswith('#')]
    ncols = len(lines[0].split())
    if ncols == 5:
        # favia format
        usecols = (0,3,4)
    elif ncols == 3:
        usecols = None
    else:
        raise RuntimeError('Unrecognized file format')

    d = np.genfromtxt(file, dtype=dt, usecols=usecols)
    d['G'] -= 1.0   # Subtract out offset
    return d

def main():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('file', type=argparse.FileType('r'), help='Correlation function')
    parser.add_argument('-a', '--aspect', type=float, default=10, help='Aspect ratio')
    args = parser.parse_args()

    corr = load_corr(args.file)
    corr = corr[corr['lag'] >= 1e-6]

    Nmodels = 700
    tauDs = np.logspace(-6, 0, Nmodels)
    sigma = 1e-3
    weights = np.ones(Nmodels) # / Nmodels
    models = np.vstack([three_dim_diffusion(lag=corr['lag'], aspect=args.aspect, n=1, tauD=tauD)
                        for tauD in tauDs])

    pl.subplot(211)
    pl.errorbar(corr['lag'], corr['G'], yerr=np.sqrt(corr['var']), c='k', label='observed')

    for nu in [1e-1, 1e-2, 1e-3, 1e-4, 1e-5, 1e-6, 1e-8, 1e-10]:
        print nu
        res = fcs_mem.simple_mem(corr['G'], models, p0=weights, sigma=np.sqrt(corr['var']), nu=nu)
        pl.subplot(211)
        l = pl.plot(corr['lag'], np.dot(models.T, res), label=r'$\nu=%1.2g$' % nu)
        pl.subplot(212)
        pl.plot(tauDs, res, '-', c=l[0].get_color())

    pl.subplot(212)
    pl.xscale('log')
    pl.subplot(211)
    pl.legend()
    pl.xscale('log')
    pl.axhline(0, c='k')
    pl.show()
    
if __name__ == '__main__':
    main()
